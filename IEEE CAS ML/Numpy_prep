{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "numpylearn.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyOcgG+RxEqN4oxopLvXszMK",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Nishanth-developer/20BCE0118-NISHANTH-PRAC-BOOKS/blob/main/numpylearn.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "C1lJxQa8A3v3"
      },
      "source": [
        "**Numpy** - **Num**erical **Py**thon "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lx5qKkE8Bsrn"
      },
      "source": [
        "Creating array"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FczT_nprBCv_",
        "outputId": "f53181c1-b467-4ffd-ef6b-bc0fc25904f0"
      },
      "source": [
        "import numpy as np\r\n",
        "ar=np.array([1,7,6,2])\r\n",
        "print(ar)\r\n",
        "print(type(ar))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[1 7 6 2]\n",
            "<class 'numpy.ndarray'>\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PPKJWXDoCGnG"
      },
      "source": [
        "-Passing as **tuple**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pm_Svy8AB5jA",
        "outputId": "2594c5fc-93f1-4609-e620-ece1990df4cc"
      },
      "source": [
        "ar=np.array((3,6,9,12))\r\n",
        "print(ar)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[ 3  6  9 12]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3ThX03FLBVEc",
        "outputId": "218481a7-0648-40f6-ed94-15cb1d831439"
      },
      "source": [
        "ar=np.array([[1,2,4],[3,7,8],[5,7,1]])\r\n",
        "ar"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1, 2, 4],\n",
              "       [3, 7, 8],\n",
              "       [5, 7, 1]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "B9LUSdx7CeHu",
        "outputId": "bfafa43c-8c87-4c5c-a3fe-b3f5ed04195e"
      },
      "source": [
        "ar=np.array([[[1,2],[3,4]],[[5,6],[7,8]]])\r\n",
        "ar"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[[1, 2],\n",
              "        [3, 4]],\n",
              "\n",
              "       [[5, 6],\n",
              "        [7, 8]]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HsN1wtADC3Kp",
        "outputId": "9d0c72f8-873c-4412-914d-780cc42b2710"
      },
      "source": [
        "print(ar.ndim)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "3\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9ZsCcDwZDPUE",
        "outputId": "ca9d7cc6-5fd6-41f9-be4c-278b25db02d3"
      },
      "source": [
        "ar1=np.array([9,8,7,6,5], ndmin=4)\r\n",
        "ar1"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[[[9, 8, 7, 6, 5]]]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Sm_4NavnEL1H",
        "outputId": "7684b349-7418-4ae5-df4d-107f450e5b2c"
      },
      "source": [
        "ar=np.array([1,2,3,5,6])\r\n",
        "ar[2]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Hs2UJb9yEaP_",
        "outputId": "fe8b3163-a9a4-4391-c66c-ca9c40e8bfd5"
      },
      "source": [
        "ar=np.array([[1,2,4],[5,6,7]])\r\n",
        "ar[1,1]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "6"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "crKjjJy4EjxO",
        "outputId": "70f2826c-808d-4a12-c0af-9125de1601f4"
      },
      "source": [
        "ar=np.array([[[1,2,4],[5,6,7]],[[2,4,6],[1,3,5]]])\r\n",
        "ar[1,0,2]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "6"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "U8kJeiyYExx3",
        "outputId": "bd5328f5-4fab-47e8-ee26-f0164027c4c3"
      },
      "source": [
        "ar[0,1,-2]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "6"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HUGSiCTQE7yd"
      },
      "source": [
        "ar=np.array([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kOtKr_ltFLcQ",
        "outputId": "21722b1f-d209-4fe7-8494-ae8cda62ff95"
      },
      "source": [
        "ar[:5]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 2, 3, 4, 5])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5Y47WNIqFPHF",
        "outputId": "3c340b17-bd76-492a-8a0f-acb8dae75ed0"
      },
      "source": [
        "ar[-5:-2]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([11, 12, 13])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4OiKpLOEFXEt",
        "outputId": "6ef0cf0a-fd48-4155-c3ba-4fe442ed80d6"
      },
      "source": [
        "ar[2:8:3]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([3, 6])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rIL924BtFyNW"
      },
      "source": [
        "ar=np.array([[1,2,3,4,5],[6,7,8,9,10]])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ll6uOImGF90t",
        "outputId": "56018113-f841-43e0-910e-789bd60b6fce"
      },
      "source": [
        "ar[1,2:]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 8,  9, 10])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Tdbe1k8BGCD1",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b027bb7a-924b-44d6-e956-d97c24022d38"
      },
      "source": [
        "import numpy as np\r\n",
        "ar=np.array([[1,2,3,4,5],[6,7,8,9,10]])\r\n",
        "ar[0:3,2:5]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 3,  4,  5],\n",
              "       [ 8,  9, 10]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6qPzkKGbUdKp",
        "outputId": "0ef2944c-9962-4e64-d471-3310b7378f34"
      },
      "source": [
        "ar=np.array([1,2,4,6],dtype='S') #string type\r\n",
        "ar1=np.array([1,2,4,6],dtype='i2') #2bytes of memory allocation\r\n",
        "print(ar)\r\n",
        "print(ar1)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[b'1' b'2' b'4' b'6']\n",
            "[1 2 4 6]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Vftn1yIqVh9V",
        "outputId": "5dbf7e73-b0a5-41c7-b5ad-574b5c3add2f"
      },
      "source": [
        "ar=np.array([1,2,4,0,5],dtype='S')\r\n",
        "ar2=np.array([1.1,9.7,5.5],dtype='f')\r\n",
        "con_ar=ar.astype('i') #string to integer conversion\r\n",
        "con2=ar2.astype(int) #basically truncates the floating digits\r\n",
        "bl=ar.astype(bool) # 0->false other than zero, everything is true\r\n",
        "print(ar)\r\n",
        "print(con_ar)\r\n",
        "print(con2)\r\n",
        "print(bl)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[b'1' b'2' b'4' b'0' b'5']\n",
            "[1 2 4 0 5]\n",
            "[1 9 5]\n",
            "[ True  True  True False  True]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Of4tFxuJX3AR"
      },
      "source": [
        "**Copy and View**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hcqj61ZDWshx",
        "outputId": "882ce0d4-2dad-4585-f813-4f99126fac4b"
      },
      "source": [
        "ar=np.array([1,5,6,7])\r\n",
        "c=ar.copy()\r\n",
        "v=ar.view()\r\n",
        "print(ar)\r\n",
        "print(c)\r\n",
        "print(v)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[1 5 6 7]\n",
            "[1 5 6 7]\n",
            "[1 5 6 7]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ip3cqJgpYFPA",
        "outputId": "c574ebc2-528a-4028-884d-31c0960dce51"
      },
      "source": [
        "c[1]=10\r\n",
        "v[1]=20\r\n",
        "print(ar)\r\n",
        "print(c)\r\n",
        "print(v)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[ 1 20  6  7]\n",
            "[ 1 10  6  7]\n",
            "[ 1 20  6  7]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eFkMCK0oYREG",
        "outputId": "795d7604-c5ea-4eb8-8d03-dc30c43e345b"
      },
      "source": [
        "print(c.base) #0 refers to independent\r\n",
        "print(v.base)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "None\n",
            "[ 1 20  6  7]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Zk1fkPKyYXuG",
        "outputId": "fd9f32f2-1c3e-42b5-9518-949fb0bb8ead"
      },
      "source": [
        "ar=np.array([[1,5,6,7],[3,5,7,8]]) # 2 1d arrays and each 1d array has 4 elements\r\n",
        "print(ar.shape)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(2, 4)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mrad7XPdYtQJ",
        "outputId": "3c582263-7645-4656-9d70-722bb7cfa2bd"
      },
      "source": [
        "ar=np.array([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16])\r\n",
        "n_ar=ar.reshape(4,4) #prints 4 1d array where each 1d array has 4 elements\r\n",
        "print(n_ar)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[ 1  2  3  4]\n",
            " [ 5  6  7  8]\n",
            " [ 9 10 11 12]\n",
            " [13 14 15 16]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "k4o17esfZckZ",
        "outputId": "c8eff8f2-6a8c-4c27-92d0-b464b2458c97"
      },
      "source": [
        "n_ar=ar.reshape(2,4,2)\r\n",
        "print(n_ar)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[[ 1  2]\n",
            "  [ 3  4]\n",
            "  [ 5  6]\n",
            "  [ 7  8]]\n",
            "\n",
            " [[ 9 10]\n",
            "  [11 12]\n",
            "  [13 14]\n",
            "  [15 16]]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QV6f0KcbZ6MM"
      },
      "source": [
        "**Here, the reshape returns only a view not the copy of the array**\r\n",
        "\r\n",
        "\r\n",
        "\r\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Qok6G2K8ZxMj",
        "outputId": "bece756b-62a3-472a-d898-343545e37882"
      },
      "source": [
        "print((ar.reshape(2,4,2)).base)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[ 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LwF7vwu-aSJo",
        "outputId": "6e8be63c-1d7e-4f78-f0b9-f2a964114988"
      },
      "source": [
        "ar.reshape(2,4,-1)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[[ 1,  2],\n",
              "        [ 3,  4],\n",
              "        [ 5,  6],\n",
              "        [ 7,  8]],\n",
              "\n",
              "       [[ 9, 10],\n",
              "        [11, 12],\n",
              "        [13, 14],\n",
              "        [15, 16]]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VDLYIDkGagal",
        "outputId": "4bfe1e7b-b833-4079-a34a-205db7cf9400"
      },
      "source": [
        "n_ar.reshape(-1) #flattening"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fb8kPZEhazxo",
        "outputId": "30c48f3e-6155-404a-c631-566c94f31c9b"
      },
      "source": [
        "ar=np.array([[11,12,13,14],[1,5,8,9],[1,2,4,6],[6,3,5,7]])\r\n",
        "ar"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[11, 12, 13, 14],\n",
              "       [ 1,  5,  8,  9],\n",
              "       [ 1,  2,  4,  6],\n",
              "       [ 6,  3,  5,  7]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Y4vHaRpKbhCx"
      },
      "source": [
        "**Very Important function -- saves time**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0GNR4ThxbOMv",
        "outputId": "0690d8d6-7298-4de5-cf8f-65cad3c2e690"
      },
      "source": [
        "for i in np.nditer(ar):\r\n",
        "  print(i,end=\" \")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "11 12 13 14 1 5 8 9 1 2 4 6 6 3 5 7 "
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9A287-O1bbKo",
        "outputId": "afbf0809-521c-4d55-e82b-e152ba70fd00"
      },
      "source": [
        "for i in np.nditer(ar,flags=[\"buffered\"],op_dtypes=['S']):\r\n",
        "  print(i,end=\" \")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "b'11' b'12' b'13' b'14' b'1' b'5' b'8' b'9' b'1' b'2' b'4' b'6' b'6' b'3' b'5' b'7' "
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KK5V5KXpcSMT",
        "outputId": "4d34383a-d04e-49b7-ef8e-a6709e4a2bc4"
      },
      "source": [
        "for j in np.nditer(ar[1::,::2]):\r\n",
        "  print(j,end=\" \")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "1 8 1 4 6 5 "
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JMijWzD2cvsQ",
        "outputId": "5d624e06-ee12-4b08-cd7e-b60577db9605"
      },
      "source": [
        "for x,y in np.ndenumerate(ar):\r\n",
        "  print(x,y)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(0, 0) 11\n",
            "(0, 1) 12\n",
            "(0, 2) 13\n",
            "(0, 3) 14\n",
            "(1, 0) 1\n",
            "(1, 1) 5\n",
            "(1, 2) 8\n",
            "(1, 3) 9\n",
            "(2, 0) 1\n",
            "(2, 1) 2\n",
            "(2, 2) 4\n",
            "(2, 3) 6\n",
            "(3, 0) 6\n",
            "(3, 1) 3\n",
            "(3, 2) 5\n",
            "(3, 3) 7\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3KDGLFvqdDAX",
        "outputId": "bdf1eb4a-4a75-4107-f466-064e46deb540"
      },
      "source": [
        "ar1=np.array([[11,12,13,14],[1,5,8,9]])\r\n",
        "ar2=np.array([[1,2,4,6],[6,3,5,7]])\r\n",
        "print(np.concatenate((ar1,ar2),axis=0))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[11 12 13 14]\n",
            " [ 1  5  8  9]\n",
            " [ 1  2  4  6]\n",
            " [ 6  3  5  7]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CSCQLwLcqUme"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}
